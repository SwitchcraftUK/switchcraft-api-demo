{"version":3,"sources":["components/general/BurgerIcon.js","components/general/State.js","components/demo/Menu.js","components/general/CloseIcon.js","components/demo/TopBar.js","data/fake-transactions.js","components/general/LoadingSpinner.js","components/general/Loading.js","components/demo/FullScreenLoading.js","config.js","utils/make-request.js","utils/get-quote.js","store/actions/actions.js","store/reducers/app-reducer.js","components/demo/Quote.js","components/demo/TransactionRow.js","components/demo/Transactions.js","components/demo/EstimateSummary.js","components/demo/TopQuoteDetails.js","components/general/OutlineButton.js","components/demo/SwitchUserButton.js","components/demo/SwitchUser.js","components/general/Input.js","components/general/Select.js","utils/get-addresses.js","components/general/Details.js","components/demo/Demo.js","components/intro/Intro.js","index.js","components/App.js"],"names":["BurgerIcon","xmlns","xmlnsXlink","height","version","viewBox","width","xmlSpace","d","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Menu","itemClicked","className","onClick","to","CloseIcon","fill","fillRule","clipRule","TopBar","useState","isMenuVisible","setIsMenuVisible","bankDetails","toggleMenu","sortCode","accountNumber","fakeTransactions","date","amount","reference","LoadingSpinner","Loading","FullScreenLoading","API_VERSION","process","REACT_APP_API_VERSION","BACKEND_URL","ENERGY_BACKEND_URL","ENERGY_QUOTE_BACKEND_URL","ENERGY_SWITCH_BACKEND_URL","GET_ADDRESSES_BACKEND_URL","makeRequest","data","url","a","method","signal","fetch","headers","body","JSON","stringify","request","json","result","status","name","getQuote","address","hasUserAcceptedTermsAndConditions","setQuote","quote","type","setQuoteError","error","appReducer","state","action","newState","quoteError","innerAppReducer","localStorage","setItem","identity","Quote","cheapestQuote","tariffs","length","annualSaving","toFixed","TransactionRow","transaction","showQuote","Transcations","dispatch","isLoading","setIsLoadingState","useEffect","controller","AbortController","savings","message","getQuoteResult","aborted","abort","map","firstTariff","annualCost","Array","from","Set","estimate","elec","hasFuel","supplierName","gas","filter","val","Boolean","join","index","key","FuelEstimateSummary","fuelName","fuelEstimate","tariffName","isPrepay","kwUsagePerMonth","EstimateSummary","TopQuoteDetails","topTariff","src","supplierLogoUrl","alt","hasWarmHomeDiscount","OutlineButton","buttonColor","style","backgroundColor","postSwitchUser","userId","SwitchUserButton","switchState","setSwitchState","errorState","setErrorState","switchUserClicked","switchResponse","code","SwitchUser","push","addressLine1","Input","placeholder","onChange","event","target","Select","options","option","label","getAddresses","postcode","arguments","addresses","fields","Object","entries","includes","postcodeRegex","Details","buttonText","floatingButton","detailsState","setDetailsState","updateDetailsClickedState","setUpdateDetailsClickedState","isLoadingAddresses","setIsLoadingAddresses","setAddresses","toUpperCase","test","then","retrievedAddresses","setNewValue","setDetails","Demo","match","path","Intro","ReactDOM","render","parse","getItem","title","firstName","lastName","email","phoneNumber","dateOfBirth","monthsAtCurrentAddress","component","document","getElementById"],"mappings":"knBAEaA,G,MAAa,kBACxB,yBAAKC,MAAM,6BAA6BC,WAAW,+BAA+BC,OAAO,OAAOC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,OAAOC,SAAS,YACtJ,0BAAMC,EAAE,8PCFCC,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAIQI,EAAgB,kBAAMC,qBAAWV,ICNjCW,G,MAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,YADkB,OAGlB,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAMC,QAASF,EAAaC,UAAU,eACpCE,GAAG,UADL,gBAIA,kBAAC,IAAD,CAAMD,QAASF,EAAaC,UAAU,eACpCE,GAAG,iBADL,qBCVSC,EAAY,kBACvB,yBAAKnB,MAAM,OAAOH,OAAO,OAAOE,QAAQ,YAAYqB,KAAK,eAAezB,MAAM,8BAC5E,0BAAM0B,SAAS,UAAUnB,EAAE,6EAA6EoB,SAAS,YACjH,0BAAMD,SAAS,UAAUnB,EAAE,8EAA8EoB,SAAS,cCEzGC,EAAS,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACnBC,EADmB,KACJC,EADI,OAEAd,IAAjBe,EAFiB,oBAEjBA,YAEHC,EAAa,kBAAMF,GAAkBD,IAE3C,OACE,4BAAQT,UAAU,aAChB,wBAAIA,UAAU,oBAAd,4BACA,uBAAGA,UAAU,sBACVW,EAAYE,SADf,IAC0BF,EAAYG,eAEtC,4BAAQd,UAAU,yBAChBC,QAASW,GAELH,EAAgB,kBAAC,EAAD,MAAgB,kBAAC,EAAD,OAIpCA,GAAiB,kBAAC,EAAD,CAAMV,YAAaa,M,8BC1B/BG,G,MAAmB,CAC9B,CACEC,KAAM,QACNd,GAAI,QACJe,OAAQ,QAEV,CAEED,KAAM,YACNd,GAAI,kBACJe,OAAQ,QACRC,UAAW,oBAEb,CACEF,KAAM,cACNd,GAAI,aACJe,OAAQ,SACRC,UAAW,WAEb,CACEF,KAAM,cACNd,GAAI,WACJe,OAAQ,WACRC,UAAW,gBCpBFC,G,kBAAiB,SAAC,GAAD,IAC5BnB,EAD4B,EAC5BA,UAD4B,OAG5B,yBAAKA,UAAS,2BAAsBA,EAAS,WAAOA,GAAc,QCDvDoB,EAAU,SAAC,GAAD,IACrB5B,EADqB,EACrBA,SADqB,OAEjB,yBAAKQ,UAAU,aACnB,kBAAC,EAAD,CAAgBA,UAAU,uBACzBR,GAAY,eCLF6B,EAAoB,kBAC/B,yBAAKrB,UAAU,yBACb,kBAAC,EAAD,iCCHSsB,EAAcC,2MAAYC,uBAAyB,KAE1DC,EAAW,UALeF,wCAKf,gBAA8BD,GAElCI,EAAkB,UAAMD,EAAN,WAElBE,EAAwB,UAAMD,EAAN,UAExBE,EAAyB,UAAMF,EAAN,WAEzBG,EAAyB,UAbNN,wCAaM,wBCbzBO,EAAW,uCAAG,WACzBC,EACAC,GAFyB,iCAAAC,EAAA,6DAGzBC,EAHyB,+BAGhB,OACTC,EAJyB,yCAODC,MAAMJ,EAAK,CAC/BK,QAAS,CACP,eAAgB,mBAChB,cAAiB,wBAEnBC,KAAMC,KAAKC,UAAUT,GACrBG,SACAC,WAdqB,cAOjBM,EAPiB,gBAgBFA,EAAQC,OAhBN,UAgBjBC,EAhBiB,OAiBA,MAAnBF,EAAQG,OAjBW,uBAkBfD,EAlBe,iCAoBhBA,GApBgB,qCAsBN,eAAb,KAAIE,KAtBe,0CAuBd,MAvBc,6EAAH,wDCGXC,EAAQ,uCAAG,WACtBC,EACAZ,GAFsB,iBAAAF,EAAA,6DAIhBF,EAAO,CACXiB,mCAAmC,EACnCD,WANoB,SAQDjB,EACnBC,EAAMJ,EAA0B,OAAQQ,GATpB,cAQhBQ,EARgB,yBAWfA,GAXe,2CAAH,wDCIRM,EAAW,SAACC,GAAD,MAAY,CAClCA,QACAC,KAHuB,cAOZC,EAAgB,SAACC,GAAD,MAAY,CACvCA,QACAF,KAH6B,oBC2ClBG,EAAa,SAACC,EAAOC,GAChC,IAAMC,EA5BgB,SAACF,EAAOC,GAC9B,OAAQA,EAAOL,MACb,ID9BuB,cC+BrB,OAAO,eACFI,EADL,CAEER,QAASS,EAAOT,QAChBG,MAAO,OAGX,ID/BqB,YCgCnB,OAAO,eACFK,EADL,CAEEL,MAAOM,EAAON,MACdQ,WAAY,OAGhB,IDhC2B,kBCiCzB,OAAO,eACFH,EADL,CAEEG,WAAYF,EAAOH,QAGvB,QACE,OAAOE,GAKMI,CAAgBJ,EAAOC,GASxC,OARAI,aAAaC,QAvDoB,qBAyD/BtB,KAAKC,UAAU,CACbO,QAASU,EAASV,QAClBe,SAAUL,EAASK,SACnBnD,YAAa8C,EAAS9C,eAGnB8C,GC5DIM,G,YAAQ,WAAO,IAAD,EACLnE,IAAXsD,EADgB,oBAChBA,MAEHc,EADmBd,GAASA,EAAMe,SAAWf,EAAMe,QAAQC,OAAS,GAChChB,EAAMe,QAAQ,GACxD,OACED,EACE,yBAAKhE,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,uBAAuBE,GAAG,eAA1C,8BAC2B8D,EAAcG,aAAaC,QAAQ,GAD9D,YAIA,OCZKC,EAAiB,SAAC,GAAD,IAC5BC,EAD4B,EAC5BA,YACAC,EAF4B,EAE5BA,UAF4B,OAI5B,yBAAKvE,UAAU,qBACb,yBAAKA,UAAU,2BAA4BsE,EAAYtD,MACvD,yBAAKhB,UAAU,4BACb,6BACE,uBAAGA,UAAU,yBAA0BsE,EAAYpE,IAEjDoE,EAAYpD,WACZ,uBAAGlB,UAAU,gCACTsE,EAAYpD,YAIpB,6BACE,uBAAGlB,UAAU,6BAAb,OAA4CsE,EAAYrD,UAI1DsD,GAAa,kBAAC,EAAD,QCfNC,EAAe,WAAO,IAAD,EACmB5E,IADnB,0BACvBmD,EADuB,EACvBA,QAASG,EADc,EACdA,MAAOQ,EADO,EACPA,WAAce,EADP,OAEOjE,oBAAS,GAFhB,mBAEzBkE,EAFyB,KAEdC,EAFc,KAoChC,OAhCAC,qBAAU,WACR,IAAMC,EAAa,IAAIC,gBAwBvB,OAvBoB,uCAAG,8BAAA7C,EAAA,6DACrB0C,GAAkB,GADG,kBAGC7B,EAClBC,EACA8B,EAAW1C,QALM,UAGbe,EAHa,wDAQb6B,EAAU7B,GACXA,EAAMe,SACNf,EAAMe,QAAQ,IACdf,EAAMe,QAAQ,GAAGE,aAEpBM,EADEM,GAAWA,EAAU,EACd9B,EAASC,GAETE,EAAc,2CAfN,kDAkBnBqB,EAASrB,EAAc,KAAI4B,UAlBR,QAoBrBL,GAAkB,GApBG,0DAAH,oDAsBpBM,GACO,WACAJ,EAAW1C,OAAO+C,SACpBL,EAAWM,WAGf,CAACpC,EAAS0B,IAETC,EACK,kBAAC,EAAD,MAGLhB,EACK,kBAAC,IAAD,CAAUxD,GAAG,MAGf,yBAAKF,UAAU,kBAClBe,EACCqE,KAAI,SAAAd,GACH,GAAIpB,GAA4B,oBAAnBoB,EAAYpE,GAA0B,CACjD,IAAMmF,EAAcnC,EAAMe,SAAWf,EAAMe,QAAQ,GAC7ChD,EACJoE,IACGA,EAAYlB,aAAekB,EAAYC,YAAc,IACtDlB,QAAQ,GAAKE,EAAYrD,OACvBf,EAAKqF,MAAMC,KAAK,IAAIC,IACxB,CACEvC,EAAMwC,SAASC,KAAKC,SAAW1C,EAAMwC,SAASC,KAAKE,aACnD3C,EAAMwC,SAASI,IAAIF,SAAW1C,EAAMwC,SAASI,IAAID,cACjDE,QAAO,SAAAC,GAAG,OAAIC,QAAQD,QACvBE,KAAK,OACFhF,EACJgC,EAAMwC,SAASC,KAAKC,SACjB1C,EAAMwC,SAASI,IAAIF,QACpB,mBACA1C,EAAMwC,SAASC,KAAKC,QAClB,WACA,MAEN,OAAO,eACFtB,EADL,CAEErD,SACAf,KACAgB,cAGJ,OAAOoD,KAERc,KACD,SAACd,EAAa6B,GAAd,OACE,kBAAC,EAAD,CAAgBC,IAAKD,EACnB7B,YAAaA,EACbC,UAAqB,IAAV4B,SCvFfE,G,MAAsB,SAAC,GAAD,IAC1BC,EAD0B,EAC1BA,SACAC,EAF0B,EAE1BA,aAF0B,OAGtBA,EAAaX,QACjB,4BACE,4BAAKU,GACL,4BAAKC,EAAaV,cAClB,4BAAKU,EAAaC,YAClB,4BAAKD,EAAaE,SAAW,SAAW,UACxC,4BAAKF,EAAaG,gBAAgBtC,QAAQ,GAA1C,OAEA,OAESuC,EAAkB,SAAC,GAAD,IAC7BjB,EAD6B,EAC7BA,SAD6B,OAG7B,yBAAK1F,UAAU,sBACb,iFACA,2BAAOA,UAAU,6BACf,+BACE,4BACE,yCACA,6CACA,2CACA,4CACA,qDAGJ,+BACE,kBAAC,EAAD,CAAqBsG,SAAS,cAAcC,aAAcb,EAASC,OACnE,kBAAC,EAAD,CAAqBW,SAAS,MAAMC,aAAcb,EAASI,UC9BtDc,G,MAAkB,SAAC,GAAD,IAC7BC,EAD6B,EAC7BA,UAD6B,OAG7B,yBAAK7G,UAAU,eACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,6BACb8G,IAAKD,EAAUE,gBAAiBC,IAAI,mBAExC,yBAAKhH,UAAU,yBACb,yBAAKA,UAAU,0BAAf,kBACA,yBAAKA,UAAU,qBACb,0BAAMA,UAAU,yBAAhB,QACC6G,EAAUvB,WAAWlB,QAAQ,IAEhC,yBAAKpE,UAAU,0BAAf,aAEF,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,0BAAf,YACA,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,yBAAhB,QACC6G,EAAU1C,aAAaC,QAAQ,IAElC,yBAAKpE,UAAU,0BAAf,cAIJ,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,8BAA8B6G,EAAUhB,cAD1D,OAGGgB,EAAUL,WACX,0BAAMxG,UAAU,mCAEZ6G,EAAUI,oBACN,oDACA,yDClCDC,G,kBAAgB,SAAC,GAAD,IAC3BjH,EAD2B,EAC3BA,QACAT,EAF2B,EAE3BA,SACA2H,EAH2B,EAG3BA,YAH2B,OAK3B,0CAAQnH,UAAU,sBAChBC,QAASA,GAEHkH,EAAc,CAChBC,MAAO,CACLC,gBAAiBF,IAEjB,IAEL3H,KCVC8H,EAAiB,SACrBC,EACAzD,EACAnD,GAEA,IAAMoB,EAAI,aACRwF,UACGzD,EAFK,CAGRnD,gBAEF,OAAOmB,EAAYC,EAAMH,IAGd4F,EAAmB,SAAC,GAG1B,IAFLX,EAEI,EAFJA,UACAU,EACI,EADJA,OACI,EACgC3H,IADhC,sBACKkE,EADL,EACKA,SAAUnD,EADf,EACeA,YADf,EAEkCH,mBAAS,MAF3C,mBAEGiH,EAFH,KAEgBC,EAFhB,OAGgClH,mBAAS,MAHzC,mBAGGmH,EAHH,KAGeC,EAHf,OAImCpH,oBAAS,GAJ5C,mBAIGkE,EAJH,KAIcC,EAJd,KAMEkD,EAAiB,uCAAG,4BAAA5F,EAAA,6DACxB0C,GAAkB,GADM,kBAGO2C,EAC3BC,EAAQzD,EAAUnD,GAJE,OAGhBmH,EAHgB,OAMtBJ,EAAeI,GANO,gDAQH,oBAAf,KAAMC,KAKRL,EAAe,IAEfE,EAAc,KAAM5C,SAfA,QAkBxBL,GAAkB,GAlBM,yDAAH,qDAqBvB,OACE,yBAAK3E,UAAU,wBAEVyH,GAAeE,GAAcjD,EAE1B,yBAAK1E,UAAU,gCAEX0E,EACI,kBAAC,EAAD,iCACCiD,GAAa,qBAKtB,yBAAK3H,UAAU,6BACb,kBAAC,EAAD,CAAeC,QAAS4H,GAAxB,2BACyBhB,EAAU1C,aAAaC,QAAQ,OC3DzD4D,G,MAAa,WAAO,IAAD,EACDpI,IADC,sBACrBmD,EADqB,EACrBA,QAASG,EADY,EACZA,MAClB,IAAKA,EACH,OAAO,kBAAC,IAAD,CAAUhD,GAAG,IAAI+H,MAAM,IAEhC,IAAMpB,EAAY3D,EAAMe,QAAQ,GAEhC,OACE,yBAAKjE,UAAU,iBACb,yBAAKA,UAAU,iCAAf,sBACsB+C,EAAQmF,aAD9B,KAGA,kBAAC,EAAD,CAAiBrB,UAAWA,IAC5B,kBAAC,EAAD,CAAiBnB,SAAUxC,EAAMwC,WACjC,kBAAC,EAAD,CAAkB6B,OAAQrE,EAAMqE,OAAQV,UAAWA,O,QCnB5CsB,G,YAAQ,SAAC,GAAD,IACnB3I,EADmB,EACnBA,SACAQ,EAFmB,EAEnBA,UAFmB,IAGnBmD,YAHmB,MAGZ,OAHY,EAInBiF,EAJmB,EAInBA,YACAC,EALmB,EAKnBA,SACA3I,EANmB,EAMnBA,MANmB,OAQnB,2BACEM,UAAS,UAAMA,GAAa,GAAnB,YACToI,YAAaA,EACbjF,KAAMA,EACNzD,MAAOA,EACP2I,SAAU,SAACC,GAAD,OAAWD,EAASC,EAAMC,OAAO7I,SACzCF,KCdOgJ,G,MAAS,SAAC,GAAD,IACpBxI,EADoB,EACpBA,UACAqI,EAFoB,EAEpBA,SACAI,EAHoB,EAGpBA,QACA/I,EAJoB,EAIpBA,MAJoB,OAMpB,4BACEM,UAAS,UAAMA,GAAa,GAAnB,aACTN,MAAOA,EACP2I,SAAU,SAACC,GAAD,OAAWD,EAASC,EAAMC,OAAO7I,SAEvC+I,EAAQrD,KAAI,SAACsD,GAAD,OACV,4BAAQtC,IAAKsC,EAAOhJ,MAAOA,MAAOgJ,EAAOhJ,OAAQgJ,EAAOC,aCZrDC,EAAY,uCAAG,WAC1BC,EACA1G,GAF0B,iBAAAF,EAAA,6DAIpBF,EAAO,CACX+G,UAAW,CAACD,IALY,SAOL/G,EACnBC,EAAMF,EAA2B,OAAQM,GARjB,cAOpBQ,EAPoB,yBAUnBA,GAAUA,EAAOyC,KAAI,SAAA2D,GAC1B,IAAMC,EAAS,CACb,OAAQ,OAAQ,OAAQ,OAAQ,QAElC,OAAOC,OAAOC,QAAQH,GACnBhD,QAAO,mCAAEK,EAAF,KAAO1G,EAAP,YAAkBsJ,EAAOG,SAAS/C,IAAQH,QAAQvG,MACzD0F,KAAI,0CACJc,KAAK,SAjBgB,2CAAH,wDCQnBkD,EAAgB,sHAETC,EAAU,SAAC,GAIjB,IAAD,IAHJC,kBAGI,MAHS,iBAGT,MAFJC,sBAEI,SADJpC,EACI,EADJA,YACI,EAC4BvH,IAD5B,mBACKmD,EADL,KACKA,QAAW0B,EADhB,OAGoCjE,mBAAS,CAC/CqI,SAAU9F,EAAQ8F,SAClBX,aAAcnF,EAAQmF,eALpB,mBAGGsB,EAHH,KAGiBC,EAHjB,OAUAjJ,oBAAS,GAVT,mBAQFkJ,EARE,KASFC,EATE,OAWgDnJ,oBAAS,GAXzD,mBAWGoJ,EAXH,KAWuBC,EAXvB,OAY8BrJ,mBAAS,IAZvC,mBAYGuI,EAZH,KAYce,EAZd,KAcJlF,qBAAU,WACR,IAAMC,EAAa,IAAIC,gBACjB+D,EAAWW,EAAaX,SAASkB,cAQvC,OAPIX,EAAcY,KAAKnB,KACrBgB,GAAsB,GACtBjB,EAAaC,EAAUhE,EAAW1C,QAAQ8H,MAAK,SAAAC,GAC7CJ,EAAaI,GACbL,GAAsB,OAGnB,WACAhF,EAAW1C,OAAO+C,SACrBL,EAAWM,WAGd,CAACqE,EAAaX,WAEjB,IAAMsB,EAAc,SAAC5B,EAAQ7I,GAC3B+J,EAAgB,eACXD,EADU,eAEZjB,EAAS7I,MASd,OAAIgK,EACK,kBAAC,IAAD,CAAUxJ,GAAG,QAAQ+H,MAAM,IAG7B,yBAAKjI,UAAU,aACpB,2BAAOA,UAAU,oBAAjB,WAEE,kBAAC,EAAD,CAAOA,UAAU,mBACfqI,SAAU,SAAC3I,GAAD,OAAWyK,EAAY,WAAYzK,IAC7CyD,KAAK,OACLzD,MAAO8J,EAAaX,YAExB,2BAAO7I,UAAU,oBAAjB,UAEE,kBAAC,EAAD,CAAQA,UAAU,mBAChBqI,SAAU,SAAC3I,GAAD,OAAWyK,EAAY,eAAgBzK,IACjD+I,SAAUM,GAAa,IAAI3D,KAAI,SAAArC,GAAO,MAAK,CACzC4F,MAAO5F,EACPrD,MAAOqD,MAETrD,MAAO8J,EAAatB,eAGpB0B,GACG,yBAAK5J,UAAU,sBAChB,kBAAC,EAAD,QAKN,yBAAKA,UAAS,+BAA0BuJ,EAAiB,mCAAqC,KAC5F,kBAAC,EAAD,CAAetJ,QApCG,WACpBwE,EbvDsB,SAAC1B,GAAD,MAAc,CACtCA,UACAI,KAHyB,eawDdiH,CAAWZ,IACpBG,GAA6B,IAkCYxC,YAAaA,GACjDmC,MCpFIe,EAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,MADkB,OAGlB,kBAAC,IAAD,KACE,yBAAKtK,UAAU,UACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuK,KAAI,UAAKD,EAAMC,KAAX,YACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKD,EAAMC,KAAX,aACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKD,EAAMC,KAAX,MACT,kBAAC,EAAD,aCnBDC,G,MAAQ,WAAO,IAAD,EACA5K,IAAhB8D,EADgB,oBAChBA,WAET,OAAO,yBAAK1D,UAAU,WACpB,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,oBAAd,uCAGA,8GAKF,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAASsJ,WAAW,aAAaC,gBAAgB,EAAOpC,YAAY,aAGpEzD,GAAc,0BAAM1D,UAAU,wBAC3B0D,EACD,6BAFY,qCCjBpB+G,IAASC,OAAO,mBCEG,kBACjB,kBAAC,EAAD,CAAenL,ahBHKgD,KAAKoI,MAAM/G,aAAagH,QAHX,wBAIX,CACpB7H,QAAS,CACPmF,aAAc,sBACdW,SAAU,SAEZ/E,SAAU,CACR+G,MAAO,KACPC,UAAW,OACXC,SAAU,QACVC,MAAO,yBACPC,YAAa,cACbC,YAAa,aACbC,uBAAwB,IAE1BxK,YAAa,CACXG,cAAe,WACfD,SAAU,YAEZ6C,WAAY,MgBhB+BpE,QAASgE,GACpD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiH,KAAK,QAAQa,UAAWf,IAC/B,kBAAC,IAAD,CAAOE,KAAK,IAAIa,UAAWZ,SDPnB,MAASa,SAASC,eAAe,Y","file":"static/js/main.0b885482.chunk.js","sourcesContent":["import React from 'react';\n\nexport const BurgerIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' xmlnsXlink='http://www.w3.org/1999/xlink' height='32px' version='1.1' viewBox='0 0 32 32' width='32px' xmlSpace='preserve'>\n    <path d='M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z'/>\n  </svg>\n)\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Menu.css';\n\nexport const Menu = ({\n  itemClicked\n}) => (\n  <div className='c-menu'>\n    <Link onClick={itemClicked} className='c-menu__item'\n      to='/demo/'>\n        Transactions\n    </Link>\n    <Link onClick={itemClicked} className='c-menu__item'\n      to='/demo/details'>\n        Change Address\n    </Link>\n  </div>\n);\n","import React from 'react';\n\nexport const CloseIcon = () => (\n  <svg width='32px' height='32px' viewBox='0 0 20 20' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n    <path fillRule='evenodd' d='M5.646 5.646a.5.5 0 000 .708l8 8a.5.5 0 00.708-.708l-8-8a.5.5 0 00-.708 0z' clipRule='evenodd' />\n    <path fillRule='evenodd' d='M14.354 5.646a.5.5 0 010 .708l-8 8a.5.5 0 01-.708-.708l8-8a.5.5 0 01.708 0z' clipRule='evenodd' />\n  </svg>\n);\n","import React, { useState } from 'react';\nimport './TopBar.css';\nimport { BurgerIcon } from '../general/BurgerIcon';\nimport { useStateValue } from '../general/State';\nimport { Menu } from './Menu';\nimport { CloseIcon } from '../general/CloseIcon';\n\nexport const TopBar = () => {\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const [{ bankDetails }] = useStateValue();\n\n  const toggleMenu = () => setIsMenuVisible(!isMenuVisible);\n\n  return (\n    <header className='c-top-bar'>\n      <h3 className='c-top-bar__title'>Switchcraft Bank Account</h3>\n      <p className='c-top-bar__details'>\n        {bankDetails.sortCode} {bankDetails.accountNumber}\n      </p>\n      <button className='c-top-bar__burger-icon'\n        onClick={toggleMenu} >\n          {\n            isMenuVisible ? <CloseIcon /> : <BurgerIcon />\n          }\n      </button>\n      {\n        isMenuVisible && <Menu itemClicked={toggleMenu} />\n      }\n    </header>\n  );\n};\n","export const fakeTransactions = [\n  {\n    date: 'Today',\n    to: 'Tesco',\n    amount: '3.00'\n  },\n  {\n    // This transaction gets replaced in the code. The rest are static\n    date: 'Yesterday',\n    to: 'Energy Supplier',\n    amount: '70.00',\n    reference: 'Gas and Electric'\n  },\n  {\n    date: '18 February',\n    to: 'Jess Smith',\n    amount: '300.00',\n    reference: 'Holiday'\n  },\n  {\n    date: '17 February',\n    to: 'Landlord',\n    amount: '1,000.00',\n    reference: 'House Rent'\n  }\n];\n","import React from 'react';\nimport './LoadingSpinner.css';\n\nexport const LoadingSpinner = ({\n  className\n}) =>\n  <div className={`c-loading-spinner${className ? ` ${className}` : ''}`}></div>\n\n","import React from 'react';\nimport './Loading.css';\nimport { LoadingSpinner } from './LoadingSpinner';\n\n\nexport const Loading = ({\n  children\n}) => <div className='c-loading'>\n  <LoadingSpinner className='c-loading__spinner' />\n  {children || 'Loading...'}\n</div>;\n\n","import React from 'react';\nimport './FullScreenLoading.css';\nimport { Loading } from '../general/Loading';\n\nexport const FullScreenLoading = () => (\n  <div className='c-full-screen-loading'>\n    <Loading>\n      Getting you a quote...\n    </Loading>\n  </div>\n);\n","export const BASE_BACKEND_URL = process.env.REACT_APP_BASE_BACKEND_URL\n  || 'https://api-staging.switchcraft.co.uk';\n\nexport const API_VERSION = process.env.REACT_APP_API_VERSION || 'v1';\n\nconst BACKEND_URL = `${BASE_BACKEND_URL}/api/${API_VERSION}`;\n\nexport const ENERGY_BACKEND_URL = `${BACKEND_URL}/energy`;\n\nexport const ENERGY_QUOTE_BACKEND_URL = `${ENERGY_BACKEND_URL}/quote`;\n\nexport const ENERGY_SWITCH_BACKEND_URL = `${ENERGY_BACKEND_URL}/switch`;\n\nexport const GET_ADDRESSES_BACKEND_URL = `${BASE_BACKEND_URL}/sw-api/getAddresses`;\n","export const makeRequest = async (\n  data,\n  url,\n  method = 'POST',\n  signal,\n) => {\n  try {\n    const request = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'switchcraft-test-key'\n      },\n      body: JSON.stringify(data),\n      method,\n      signal\n    });\n    const result = await request.json();\n    if (request.status !== 200) {\n      throw result;\n    }\n    return result;\n  } catch (err) {\n    if (err.name === 'AbortError') {\n      return null;\n    }\n    throw err;\n  }\n};\n","import { ENERGY_QUOTE_BACKEND_URL } from '../config';\nimport { makeRequest } from './make-request';\n\nexport const getQuote = async (\n  address,\n  signal\n) => {\n  const data = {\n    hasUserAcceptedTermsAndConditions: true,\n    address\n  };\n  const result = await makeRequest(\n    data, ENERGY_QUOTE_BACKEND_URL, 'POST', signal\n  );\n  return result;\n};\n","export const SET_DETAILS = 'SET_DETAILS';\nexport const setDetails = (address) => ({\n  address,\n  type: SET_DETAILS\n});\n\nexport const SET_QUOTE = 'SET_QUOTE';\nexport const setQuote = (quote) => ({\n  quote,\n  type: SET_QUOTE\n});\n\nexport const SET_QUOTE_ERROR = 'SET_QUOTE_ERROR';\nexport const setQuoteError = (error) => ({\n  error,\n  type: SET_QUOTE_ERROR\n});\n","import { SET_DETAILS, SET_QUOTE, SET_QUOTE_ERROR } from '../actions';\n\nconst switchcraftApiDemoStateKey = 'swc-api-demo-1.0.0';\n\nexport const initAppState = () => {\n  const storedState = JSON.parse(localStorage.getItem(switchcraftApiDemoStateKey));\n  return storedState || {\n    address: {\n      addressLine1: '192a Kingsland Road',\n      postcode: 'E28EB'\n    },\n    identity: {\n      title: 'Mr',\n      firstName: 'John',\n      lastName: 'Smith',\n      email: 'john.smith@email.co.uk',\n      phoneNumber: '07950450297',\n      dateOfBirth: '1989-05-25',\n      monthsAtCurrentAddress: 50\n    },\n    bankDetails: {\n      accountNumber: '14457846',\n      sortCode: '40-47-84'\n    },\n    quoteError: null\n  };\n};\n\nconst innerAppReducer = (state, action) => {\n  switch (action.type) {\n    case SET_DETAILS:\n      return {\n        ...state,\n        address: action.address,\n        quote: null\n      };\n\n    case SET_QUOTE:\n      return {\n        ...state,\n        quote: action.quote,\n        quoteError: null\n      };\n\n    case SET_QUOTE_ERROR:\n      return {\n        ...state,\n        quoteError: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const appReducer = (state, action) => {\n  const newState = innerAppReducer(state, action);\n  localStorage.setItem(\n    switchcraftApiDemoStateKey,\n    JSON.stringify({\n      address: newState.address,\n      identity: newState.identity,\n      bankDetails: newState.bankDetails\n    })\n  );\n  return newState;\n};\n","import React from 'react';\nimport './Quote.css';\nimport { Link } from 'react-router-dom';\nimport { useStateValue } from '../general/State';\n\nexport const Quote = () => {\n  const [{ quote }] = useStateValue();\n  const showSwitchButton = quote && quote.tariffs && quote.tariffs.length > 0;\n  const cheapestQuote = showSwitchButton && quote.tariffs[0];\n  return (\n    cheapestQuote ?\n      <div className='c-quote'>\n        <Link className='c-quote__switch-user' to='demo/switch'>\n          Switch energy and save £{cheapestQuote.annualSaving.toFixed(0)} a year\n        </Link>\n      </div>\n      : null\n  );\n};\n","import React from 'react';\nimport './TransactionRow.css';\nimport { Quote } from './Quote';\n\nexport const TransactionRow = ({\n  transaction,\n  showQuote\n}) => (\n  <div className='c-transaction-row'>\n    <div className='c-transaction-row__date'>{ transaction.date }</div>\n    <div className='c-transaction-row__inner'>\n      <div>\n        <p className='c-transaction-row__to'>{ transaction.to }</p>\n        {\n          transaction.reference &&\n          <p className='c-transaction-row__reference'>\n            { transaction.reference }\n          </p>\n        }\n      </div>\n      <div>\n        <p className='c-transaction-row__amount'>£{ transaction.amount }</p>\n      </div>\n    </div>\n    {\n      showQuote && <Quote />\n    }\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './Transactions.css';\nimport { fakeTransactions } from '../../data/fake-transactions';\nimport { FullScreenLoading } from './FullScreenLoading';\nimport { getQuote } from '../../utils/get-quote';\nimport { useStateValue } from '../general/State';\nimport { setQuote, setQuoteError } from '../../store';\nimport { TransactionRow } from './TransactionRow';\nimport { Redirect } from 'react-router';\n\nexport const Transcations = () => {\n  const [{ address, quote, quoteError }, dispatch] = useStateValue();\n  const [isLoading, setIsLoadingState] = useState(true);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getQuoteResult = async () => {\n      setIsLoadingState(true);\n      try {\n        const quote = await getQuote(\n          address,\n          controller.signal\n        );\n        if (!quote) return;\n        const savings = quote\n          && quote.tariffs\n          && quote.tariffs[0]\n          && quote.tariffs[0].annualSaving;\n        if (savings && savings > 0) {\n          dispatch(setQuote(quote));\n        } else {\n          dispatch(setQuoteError('No savings to be made for this address'));\n        }\n      } catch (err) {\n        dispatch(setQuoteError(err.message));\n      }\n      setIsLoadingState(false);\n    };\n    getQuoteResult();\n    return () => {\n      if (!controller.signal.aborted) {\n         controller.abort();\n      }\n    };\n  }, [address, dispatch]);\n\n  if (isLoading) {\n    return <FullScreenLoading />;\n  }\n\n  if (quoteError) {\n    return <Redirect to='/' />;\n  }\n\n  return <div className='c-transactions'>\n    { fakeTransactions\n      .map(transaction => {\n        if (quote && transaction.to === 'Energy Supplier') {\n          const firstTariff = quote.tariffs && quote.tariffs[0];\n          const amount =\n            firstTariff ? (\n              (firstTariff.annualSaving + firstTariff.annualCost) / 12\n            ).toFixed(0) : transaction.amount\n          const to = Array.from(new Set(\n            [\n              quote.estimate.elec.hasFuel && quote.estimate.elec.supplierName,\n              quote.estimate.gas.hasFuel && quote.estimate.gas.supplierName,\n            ].filter(val => Boolean(val))\n          )).join(' / ');\n          const reference = (\n            quote.estimate.elec.hasFuel\n            && quote.estimate.gas.hasFuel\n          ) ? 'Gas and Electric'\n            : quote.estimate.elec.hasFuel\n              ? 'Electric'\n              : 'Gas';\n\n          return {\n            ...transaction,\n            amount,\n            to,\n            reference\n          };\n        }\n        return transaction;\n      })\n      .map(\n      (transaction, index) =>\n        <TransactionRow key={index}\n          transaction={transaction}\n          showQuote={index === 1} />\n    ) }\n  </div>\n};\n","import React from 'react';\nimport './EstimateSummary.css';\n\nconst FuelEstimateSummary = ({\n  fuelName,\n  fuelEstimate\n}) => fuelEstimate.hasFuel ? (\n  <tr>\n    <td>{fuelName}</td>\n    <td>{fuelEstimate.supplierName}</td>\n    <td>{fuelEstimate.tariffName}</td>\n    <td>{fuelEstimate.isPrepay ? 'Prepay' : 'Credit'}</td>\n    <td>{fuelEstimate.kwUsagePerMonth.toFixed(0)}kW</td>\n  </tr>\n) : null;\n\nexport const EstimateSummary = ({\n  estimate\n}) => (\n  <div className='c-estimate-summary'>\n    <p>We have made this estimate based on these details:</p>\n    <table className='c-estimate-summary__table'>\n      <thead>\n        <tr>\n          <th>Fuel Type</th>\n          <th>Supplier Name</th>\n          <th>Tariff Name</th>\n          <th>Payment Type</th>\n          <th>KwH Usage Per Month</th>\n        </tr>\n      </thead>\n      <tbody>\n        <FuelEstimateSummary fuelName='Electricity' fuelEstimate={estimate.elec} />\n        <FuelEstimateSummary fuelName='Gas' fuelEstimate={estimate.gas} />\n      </tbody>\n    </table>\n  </div>\n);\n","import React from 'react';\nimport './TopQuoteDetails.css';\n\nexport const TopQuoteDetails = ({\n  topTariff\n}) => (\n  <div className='c-top-quote'>\n    <div className='c-top-quote__top-row'>\n      <div className='c-top-quote__row-item'>\n        <img className='c-top-quote__supplier-logo'\n          src={topTariff.supplierLogoUrl} alt='Supplier logo' />\n      </div>\n      <div className='c-top-quote__row-item'>\n        <div className='c-top-quote__cost-text'>Estimated cost</div>\n        <div className='c-top-quote__cost'>\n          <span className='c-top-quote__currency'>£</span>\n          {topTariff.annualCost.toFixed(0)}\n        </div>\n        <div className='c-top-quote__cost-text'>per year</div>\n      </div>\n      <div className='c-top-quote__row-item'>\n        <div className='c-top-quote__cost-text'>You save</div>\n        <div className='c-top-quote__saving'>\n          <span className='c-top-quote__currency'>£</span>\n          {topTariff.annualSaving.toFixed(0)}\n        </div>\n        <div className='c-top-quote__cost-text'>per year</div>\n      </div>\n    </div>\n\n    <div className='c-top-quote__bottom-row'>\n      <span className='c-top-quote__supplier-name'>{topTariff.supplierName}</span>\n      &nbsp;\n      {topTariff.tariffName}\n      <span className='c-top-quote__warm-home-discount'>\n        {\n          topTariff.hasWarmHomeDiscount\n            ? 'This tariff will preserve your warm home discount'\n            : 'This tariff does not include a warm home discount'\n        }\n      </span>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './Button.css';\nimport './OutlineButton.css';\n\nexport const OutlineButton = ({\n  onClick,\n  children,\n  buttonColor\n}) => (\n  <button className='c-btn c-outline-btn'\n    onClick={onClick}\n    {\n      ...(buttonColor ? {\n        style: {\n          backgroundColor: buttonColor\n        }\n      } : {})\n    }>\n    {children}\n  </button>\n);\n","import React, { useState } from 'react';\nimport { ENERGY_SWITCH_BACKEND_URL } from '../../config';\nimport { Loading } from '../general/Loading';\nimport './SwitchUserButton.css'\nimport { OutlineButton } from '../general/OutlineButton';\nimport { makeRequest } from '../../utils/make-request';\nimport { useStateValue } from '../general/State';\n\nconst postSwitchUser = (\n  userId,\n  identity,\n  bankDetails\n) => {\n  const data = {\n    userId,\n    ...identity,\n    bankDetails\n  };\n  return makeRequest(data, ENERGY_SWITCH_BACKEND_URL);\n};\n\nexport const SwitchUserButton = ({\n  topTariff,\n  userId\n}) => {\n  const [{ identity, bankDetails }] = useStateValue();\n  const [switchState, setSwitchState] = useState(null);\n  const [errorState, setErrorState] = useState(null);\n  const [isLoading, setIsLoadingState] = useState(false);\n\n  const switchUserClicked = async () => {\n    setIsLoadingState(true);\n    try {\n      const switchResponse = await postSwitchUser(\n        userId, identity, bankDetails\n      );\n      setSwitchState(switchResponse);\n    } catch (error) {\n      if (error.code === 'duplicateSwitch') {\n        /**\n         * For the purposes of the demo we are assuming\n         * duplicate switches are complete.\n         */\n        setSwitchState({});\n      } else {\n        setErrorState(error.message);\n      }\n    }\n    setIsLoadingState(false);\n  };\n\n  return (\n    <div className='c-switch-user-button'>\n      {\n        (switchState || errorState || isLoading)\n          ? (\n            <div className='c-switch-user-button__result'>\n              {\n                isLoading\n                  ? <Loading>Switching your energy...</Loading>\n                  : !errorState ? 'Switch successful' : errorState\n              }\n            </div>\n          )\n          : (\n            <div className='c-switch-user-button__btn'>\n              <OutlineButton onClick={switchUserClicked}>\n                Switch now and save £{ topTariff.annualSaving.toFixed(0) }\n              </OutlineButton>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { EstimateSummary } from './EstimateSummary';\nimport { TopQuoteDetails } from './TopQuoteDetails';\nimport { SwitchUserButton } from './SwitchUserButton';\nimport { useStateValue } from '../general/State';\nimport './SwitchUser.css';\nimport { Redirect } from 'react-router';\n\nexport const SwitchUser = () => {\n  const [{ address, quote }] = useStateValue();\n  if (!quote) {\n    return <Redirect to='/' push={true} />;\n  }\n  const topTariff = quote.tariffs[0];\n\n  return (\n    <div className='c-switch-user'>\n      <div className='c-switch-user__top-quote-text'>\n        Your top quote for {address.addressLine1}:\n      </div>\n      <TopQuoteDetails topTariff={topTariff} />\n      <EstimateSummary estimate={quote.estimate} />\n      <SwitchUserButton userId={quote.userId} topTariff={topTariff} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './Input.css';\n\nexport const Input = ({\n  children,\n  className,\n  type = 'text',\n  placeholder,\n  onChange,\n  value\n}) => (\n  <input\n    className={`${(className || '')} c-input`}\n    placeholder={placeholder}\n    type={type}\n    value={value}\n    onChange={(event) => onChange(event.target.value)}>\n    { children }\n  </input>\n);\n","import React from 'react';\nimport './Select.css';\n\nexport const Select = ({\n  className,\n  onChange,\n  options,\n  value\n}) => (\n  <select\n    className={`${(className || '')} c-select`}\n    value={value}\n    onChange={(event) => onChange(event.target.value)}>\n      {\n        options.map((option) =>\n          <option key={option.value} value={option.value}>{option.label}</option>\n        )\n      }\n  </select>\n);\n","import { GET_ADDRESSES_BACKEND_URL } from '../config';\nimport { makeRequest } from './make-request';\n\nexport const getAddresses = async (\n  postcode,\n  signal\n) => {\n  const data = {\n    arguments: [postcode]\n  };\n  const result = await makeRequest(\n    data, GET_ADDRESSES_BACKEND_URL, 'POST', signal\n  );\n  return result && result.map(addresses => {\n    const fields = [\n      'orgn', 'subb', 'bnam', 'bnum', 'thor'\n    ];\n    return Object.entries(addresses)\n      .filter(([key, value]) => fields.includes(key) && Boolean(value))\n      .map(([, value]) => value)\n      .join(' ');\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport './Details.css';\nimport { OutlineButton } from './OutlineButton';\nimport { useStateValue } from './State';\nimport { setDetails } from '../../store';\nimport { Input } from './Input';\nimport { Redirect } from 'react-router';\nimport { Select } from './Select';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { getAddresses } from '../../utils/get-addresses';\n\nconst postcodeRegex = /^(GIR ?0AA|[A-PR-UWYZ]([0-9]{1,2}|([A-HK-Y][0-9]([0-9ABEHMNPRV-Y])?)|[0-9][A-HJKPS-UW]) ?[0-9][ABD-HJLNP-UW-Z]{2})$/;\n\nexport const Details = ({\n  buttonText = 'Update details',\n  floatingButton = true,\n  buttonColor\n}) => {\n  const [{ address }, dispatch] = useStateValue();\n\n  const [detailsState, setDetailsState] = useState({\n    postcode: address.postcode,\n    addressLine1: address.addressLine1\n  });\n  const [\n    updateDetailsClickedState,\n    setUpdateDetailsClickedState\n  ] = useState(false);\n  const [isLoadingAddresses, setIsLoadingAddresses] = useState(true);\n  const [addresses, setAddresses] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const postcode = detailsState.postcode.toUpperCase();\n    if (postcodeRegex.test(postcode)) {\n      setIsLoadingAddresses(true);\n      getAddresses(postcode, controller.signal).then(retrievedAddresses => {\n        setAddresses(retrievedAddresses);\n        setIsLoadingAddresses(false);\n      });\n    }\n    return () => {\n      if (!controller.signal.aborted) {\n        controller.abort();\n      }\n    };\n  }, [detailsState.postcode]);\n\n  const setNewValue = (target, value) => {\n    setDetailsState({\n      ...detailsState,\n      [target]: value\n    });\n  };\n\n  const updateDetails = () => {\n    dispatch(setDetails(detailsState));\n    setUpdateDetailsClickedState(true);\n  };\n\n  if (updateDetailsClickedState) {\n    return <Redirect to='/demo' push={true} />;\n  }\n\n  return <div className='c-details'>\n    <label className='c-details__field'>\n      Postcode\n      <Input className='c-details__input'\n        onChange={(value) => setNewValue('postcode', value)}\n        type='text'\n        value={detailsState.postcode} />\n    </label>\n    <label className='c-details__field'>\n      Address\n      <Select className='c-details__input'\n        onChange={(value) => setNewValue('addressLine1', value)}\n        options={(addresses || []).map(address => ({\n          label: address,\n          value: address\n        }))}\n        value={detailsState.addressLine1}\n      />\n      {\n        isLoadingAddresses\n        && <div className='c-details__spinner'>\n          <LoadingSpinner />\n        </div>\n      }\n    </label>\n\n    <div className={`c-details__update-btn${floatingButton ? ' c-details__update-btn__floating' : ''}`}>\n      <OutlineButton onClick={updateDetails} buttonColor={buttonColor}>\n        {buttonText}\n      </OutlineButton>\n    </div>\n  </div>;\n}\n","import React from 'react';\nimport './Demo.css';\nimport { TopBar } from './TopBar';\nimport { Transcations } from './Transactions';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { SwitchUser } from './SwitchUser';\nimport { Details } from '../general/Details';\n\nexport const Demo = ({\n  match\n}) =>\n  <Router>\n    <div className='c-demo'>\n      <div className='c-demo__inner'>\n        <TopBar />\n        <div>\n          <Switch>\n            <Route path={`${match.path}/switch`}>\n              <SwitchUser />\n            </Route>\n            <Route path={`${match.path}/details`}>\n              <Details />\n            </Route>\n            <Route path={`${match.path}/`}>\n              <Transcations />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  </Router>;\n","import React from 'react';\nimport { Details } from '../general/Details'\nimport './Intro.css';\nimport { useStateValue } from '../general/State';\n\nexport const Intro = () => {\n  const [{ quoteError }] = useStateValue();\n\n  return <div className='c-intro'>\n    <div className='c-intro__text-section'>\n      <h2 className='c-intro__heading'>\n        Welcome to the Switchcraft API demo\n      </h2>\n      <p>\n        Enter your address to see an example of how you might\n        use the Switchcraft API.\n      </p>\n    </div>\n    <div className='c-intro__details'>\n      <Details buttonText='Start demo' floatingButton={false} buttonColor='#FFFFFF' />\n    </div>\n    {\n      quoteError && <span className='c-intro__quote-error'>\n        {quoteError}\n        <br />\n        Please try a different address\n      </span>\n    }\n  </div>\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Demo } from './demo/Demo';\nimport { Intro } from './intro/Intro';\nimport { initAppState, appReducer } from '../store';\nimport { StateProvider } from './general/State';\n\nexport const App = () => (\n  <StateProvider initialState={initAppState()} reducer={appReducer}>\n    <Router>\n      <Switch>\n        <Route path='/demo' component={Demo} />\n        <Route path='/' component={Intro} />\n      </Switch>\n    </Router>\n  </StateProvider>\n);\n"],"sourceRoot":""}