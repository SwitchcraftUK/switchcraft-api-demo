{"version":3,"sources":["components/BurgerIcon.js","components/State.js","components/TopBar.js","data/fake-transactions.js","config.js","components/LoadingSpinner.js","components/Button.js","utils/make-request.js","store/actions/actions.js","store/reducers/app-reducer.js","components/Quote.js","components/Transactions.js","components/EstimateSummary.js","components/TopQuoteDetails.js","components/OutlineButton.js","components/SwitchUserButton.js","components/SwitchUser.js","components/Input.js","components/Details.js","index.js","components/App.js"],"names":["BurgerIcon","xmlns","xmlnsXlink","height","version","viewBox","width","xmlSpace","d","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","TopBar","bankDetails","className","sortCode","accountNumber","to","fakeTransactions","date","amount","reference","API_VERSION","process","REACT_APP_API_VERSION","BACKEND_URL","ENERGY_BACKEND_URL","ENERGY_QUOTE_BACKEND_URL","ENERGY_SWITCH_BACKEND_URL","LoadingSpinner","Button","onClick","makeRequest","data","url","a","method","fetch","headers","body","JSON","stringify","request","json","result","status","setQuote","quote","type","appReducer","state","action","newState","address","postcode","replace","toUpperCase","innerAppReducer","localStorage","setItem","identity","getQuote","hasUserAcceptedTermsAndConditions","QuoteError","errorMessage","Quote","useState","isLoading","setIsLoadingState","errorState","setErrorState","dispatch","getQuoteResult","message","showSwitchButton","tariffs","length","cheapestQuote","annualSaving","toFixed","TransactionRow","transaction","showQuote","Transcations","map","index","key","FuelEstimateSummary","fuelName","fuelEstimate","hasFuel","supplierName","tariffName","isPrepay","kwUsagePerMonth","EstimateSummary","estimate","elec","gas","TopQuoteDetails","topTariff","src","supplierLogoUrl","alt","annualCost","OutlineButton","postSwitchUser","userId","SwitchUserButton","switchState","setSwitchState","switchUserClicked","switchResponse","SwitchUser","addressLine1","Input","placeholder","onChange","event","target","Details","detailsState","setDetailsState","setNewValue","setAddress","window","history","back","ReactDOM","render","parse","getItem","title","firstName","lastName","email","phoneNumber","dateOfBirth","monthsAtCurrentAddress","path","document","getElementById"],"mappings":"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","file":"static/js/main.d2ab6ef9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const BurgerIcon = () => (\n  <svg xmlns='http://www.w3.org/2000/svg' xmlnsXlink='http://www.w3.org/1999/xlink' height='32px' version='1.1' viewBox='0 0 32 32' width='32px' xmlSpace='preserve'>\n    <path d='M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z'/>\n  </svg>\n)\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from 'react';\nimport './TopBar.css';\nimport { BurgerIcon } from './BurgerIcon';\nimport { Link } from 'react-router-dom';\nimport { useStateValue } from './State';\n\nexport const TopBar = () => {\n  const [{ bankDetails }] = useStateValue();\n  return (\n    <header className='c-top-bar'>\n      <h3>Switchcraft Bank Account</h3>\n      <p>\n        {bankDetails.sortCode} {bankDetails.accountNumber}\n      </p>\n      <Link\n        to='/details'\n        className='c-top-bar__burger-icon'>\n        <BurgerIcon />\n      </Link>\n    </header>\n  );\n};\n","export const fakeTransactions = [\n  {\n    date: 'Today',\n    to: 'Tesco',\n    amount: '3.00'\n  },\n  {\n    date: 'Yesterday',\n    to: 'British Gas',\n    amount: '70.00',\n    reference: 'Gas and Electric'\n  },\n  {\n    date: '18 February',\n    to: 'Jess Smith',\n    amount: '300.00',\n    reference: 'Holiday'\n  },\n  {\n    date: '17 February',\n    to: 'Landlord',\n    amount: '1,000.00',\n    reference: 'House Rent'\n  }\n];\n","export const BASE_BACKEND_URL = process.env.REACT_APP_BASE_BACKEND_URL || 'http://localhost:3000';\n\nexport const API_VERSION = process.env.REACT_APP_API_VERSION || 'v1';\n\nconst BACKEND_URL = `${BASE_BACKEND_URL}/api/${API_VERSION}`;\n\nexport const ENERGY_BACKEND_URL = `${BACKEND_URL}/energy`;\n\nexport const ENERGY_QUOTE_BACKEND_URL = `${ENERGY_BACKEND_URL}/quote`;\n\nexport const ENERGY_SWITCH_BACKEND_URL = `${ENERGY_BACKEND_URL}/switch`;\n","import React from 'react';\nimport './LoadingSpinner.css';\n\nexport const LoadingSpinner = ({\n  children\n}) => <div className='c-loading'>{\n  children || 'Loading...'\n}</div>;\n","import React from 'react';\nimport './Button.css';\n\nexport const Button = ({\n  onClick,\n  children\n}) => (\n  <button className='c-btn' onClick={onClick}>\n    {children}\n  </button>\n);\n","export const makeRequest = async (\n  data,\n  url,\n  method = 'POST'\n) => {\n  const request = await fetch(url, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'switchcraft-test-key'\n    },\n    body: JSON.stringify(data),\n    method\n  });\n  const result = await request.json();\n  if (request.status === 400 || request.status === 500) {\n    throw result;\n  }\n  return result;\n};\n","export const SET_ADDRESS = 'SET_ADDRESS';\nexport const setAddress = (address) => ({\n  address,\n  type: SET_ADDRESS\n});\n\nexport const SET_QUOTE = 'SET_QUOTE';\nexport const setQuote = (quote) => ({\n  quote,\n  type: SET_QUOTE\n});\n","import { SET_ADDRESS, SET_QUOTE } from '../actions';\n\nconst switchcraftApiDemoStateKey = 'swc-api-demo';\n\nexport const initAppState = () => {\n  const storedState = JSON.parse(localStorage.getItem(switchcraftApiDemoStateKey));\n  return storedState || {\n    address: {\n      addressLine1: '192a Kingsland Road',\n      postcode: 'E28EB'\n    },\n    identity: {\n      title: 'Mr',\n      firstName: 'John',\n      lastName: 'Smith',\n      email: 'john.smith@email.co.uk',\n      phoneNumber: '07950450297',\n      dateOfBirth: '1989-05-25',\n      monthsAtCurrentAddress: 50\n    },\n    bankDetails: {\n      accountNumber: '14457846',\n      sortCode: '40-47-84'\n    }\n  };\n};\n\nconst innerAppReducer = (state, action) => {\n  switch (action.type) {\n    case SET_ADDRESS:\n      return {\n        ...state,\n        address: {\n          ...action.address,\n          postcode: (action.address.postcode\n            ? action.address.postcode.replace(/\\s/g, '').toUpperCase()\n            : null\n          )\n        },\n        quote: null\n      };\n\n    case SET_QUOTE:\n      return {\n        ...state,\n        quote: action.quote\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const appReducer = (state, action) => {\n  const newState = innerAppReducer(state, action);\n  localStorage.setItem(\n    switchcraftApiDemoStateKey,\n    JSON.stringify({\n      address: newState.address,\n      identity: newState.identity,\n      bankDetails: newState.bankDetails\n    })\n  );\n  return newState;\n};\n","import React, { useState } from 'react';\nimport { ENERGY_QUOTE_BACKEND_URL } from '../config';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport './Quote.css';\nimport { Button } from './Button';\nimport { makeRequest } from '../utils/make-request';\nimport { Link } from 'react-router-dom';\nimport { useStateValue } from './State';\nimport { setQuote } from '../store';\n\nconst getQuote = (\n  address\n) => {\n  const data = {\n    hasUserAcceptedTermsAndConditions: true,\n    address\n  };\n  return makeRequest(data, ENERGY_QUOTE_BACKEND_URL);\n};\n\nconst QuoteError = ({ errorMessage }) => (\n  <div className='c-quote__error'>{ errorMessage }</div>\n);\n\nexport const Quote = () => {\n  const [{ address }] = useStateValue();\n  const [isLoading, setIsLoadingState] = useState(false);\n  const [errorState, setErrorState] = useState(null);\n  const [{ quote }, dispatch] = useStateValue();\n\n  const getQuoteResult = async () => {\n    setIsLoadingState(true);\n    try {\n      const quote = await getQuote(address);\n      dispatch(setQuote(quote));\n    } catch (err) {\n      setErrorState(err.message);\n    }\n    setIsLoadingState(false);\n  };\n\n  const showSwitchButton = quote && quote.tariffs && quote.tariffs.length > 0;\n  const cheapestQuote = showSwitchButton && quote.tariffs[0];\n  return (\n    <div className={`c-quote${\n      showSwitchButton ? ' c-quote__button-shown' : ''\n    }`}>\n      {\n        isLoading\n          ? <LoadingSpinner>Getting your quote...</LoadingSpinner>\n          : showSwitchButton\n            ? <Link className='c-quote__switch-user' to='/switch'>\n              Switch my energy and save £{cheapestQuote.annualSaving.toFixed(0)}\n            </Link>\n            : (\n              errorState\n                ? <QuoteError errorMessage={errorState} />\n                : <Button onClick={getQuoteResult}>\n                  <span className='c-quote__save-more'>Want to save money on your energy?</span>\n                  <br />\n                  Click here to find out how much you could save\n                </Button>\n            )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport './Transactions.css';\nimport { fakeTransactions } from '../data/fake-transactions';\nimport { Quote } from './Quote';\n\nconst TransactionRow = ({\n  transaction,\n  showQuote\n}) => (\n  <div className='c-transaction-row'>\n    <div className='c-transaction-row__date'>{ transaction.date }</div>\n    <div className='c-transaction-row__inner'>\n      <div>\n        <p className='c-transaction-row__to'>{ transaction.to }</p>\n        {\n          transaction.reference &&\n          <p className='c-transaction-row__reference'>\n            { transaction.reference }\n          </p>\n        }\n      </div>\n      <div>\n        <p className='c-transaction-row__amount'>£{ transaction.amount }</p>\n      </div>\n    </div>\n    {\n      showQuote && <Quote />\n    }\n  </div>\n);\n\nexport const Transcations = () => (\n  <div className='c-transactions'>\n    { fakeTransactions.map(\n      (transaction, index) =>\n        <TransactionRow key={index}\n          transaction={transaction}\n          showQuote={index === 1 } />\n    ) }\n  </div>\n);\n","import React from 'react';\nimport './EstimateSummary.css';\n\nconst FuelEstimateSummary = ({\n  fuelName,\n  fuelEstimate\n}) => fuelEstimate.hasFuel ? (\n  <tr>\n    <td>{fuelName}</td>\n    <td>{fuelEstimate.supplierName}</td>\n    <td>{fuelEstimate.tariffName}</td>\n    <td>{fuelEstimate.isPrepay ? 'Prepay' : 'Credit'}</td>\n    <td>{fuelEstimate.kwUsagePerMonth.toFixed(0)}kW</td>\n  </tr>\n) : null;\n\nexport const EstimateSummary = ({\n  estimate\n}) => (\n  <div className='c-estimate-summary'>\n    <p>We have made this estimate based on these details:</p>\n    <table className='c-estimate-summary__table'>\n      <thead>\n        <tr>\n          <th>Fuel Type</th>\n          <th>Supplier Name</th>\n          <th>Tariff Name</th>\n          <th>Payment Type</th>\n          <th>KwH Usage Per Month</th>\n        </tr>\n      </thead>\n      <tbody>\n        <FuelEstimateSummary fuelName='Electricity' fuelEstimate={estimate.elec} />\n        <FuelEstimateSummary fuelName='Gas' fuelEstimate={estimate.gas} />\n      </tbody>\n    </table>\n  </div>\n);\n","import React from 'react';\nimport './TopQuoteDetails.css';\n\nexport const TopQuoteDetails = ({\n  topTariff\n}) => (\n  <div className='c-top-quote'>\n    <div className='c-top-quote__top-row'>\n      <div className='c-top-quote__row-item'>\n        <img className='c-top-quote__supplier-logo'\n          src={topTariff.supplierLogoUrl} alt='Supplier logo' />\n      </div>\n      <div className='c-top-quote__row-item'>\n        <div className='c-top-quote__cost-text'>Estimated cost</div>\n        <div className='c-top-quote__cost'>\n          <span className='c-top-quote__currency'>£</span>\n          {topTariff.annualCost.toFixed(0)}\n        </div>\n        <div className='c-top-quote__cost-text'>per year</div>\n      </div>\n      <div className='c-top-quote__row-item'>\n        <div className='c-top-quote__cost-text'>You save</div>\n        <div className='c-top-quote__saving'>\n          <span className='c-top-quote__currency'>£</span>\n          {topTariff.annualSaving.toFixed(0)}\n        </div>\n        <div className='c-top-quote__cost-text'>per year</div>\n      </div>\n    </div>\n\n    <div className='c-top-quote__bottom-row'>\n      <span className='c-top-quote__supplier-name'>{topTariff.supplierName}</span>\n      &nbsp;\n      {topTariff.tariffName}\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './Button.css';\nimport './OutlineButton.css';\n\nexport const OutlineButton = ({\n  onClick,\n  children\n}) => (\n  <button className='c-btn c-outline-btn' onClick={onClick}>\n    {children}\n  </button>\n);\n","import React, { useState } from 'react';\nimport { ENERGY_SWITCH_BACKEND_URL } from '../config';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport './SwitchUserButton.css'\nimport { OutlineButton } from './OutlineButton';\nimport { makeRequest } from '../utils/make-request';\nimport { useStateValue } from './State';\n\nconst postSwitchUser = (\n  userId,\n  identity,\n  bankDetails\n) => {\n  const data = {\n    userId,\n    ...identity,\n    bankDetails\n  };\n  return makeRequest(data, ENERGY_SWITCH_BACKEND_URL);\n};\n\nexport const SwitchUserButton = ({\n  topTariff,\n  userId\n}) => {\n  const [{ identity, bankDetails }] = useStateValue();\n  const [switchState, setSwitchState] = useState(null);\n  const [errorState, setErrorState] = useState(null);\n  const [isLoading, setIsLoadingState] = useState(false);\n\n  const switchUserClicked = async () => {\n    setIsLoadingState(true);\n    try {\n      const switchResponse = await postSwitchUser(\n        userId, identity, bankDetails\n      );\n      setSwitchState(switchResponse);\n    } catch (error) {\n      setErrorState(error.message);\n    }\n    setIsLoadingState(false);\n  };\n\n  return (\n    <div className='c-switch-user-button'>\n      {\n        (switchState || errorState || isLoading)\n          ? (\n            <div className='c-switch-user-button__result'>\n              {\n                isLoading\n                  ? <LoadingSpinner>Switching your energy...</LoadingSpinner>\n                  : !errorState ? 'Switch successful' : errorState\n              }\n            </div>\n          )\n          : (\n            <div className='c-switch-user-button__btn'>\n              <OutlineButton onClick={switchUserClicked}>\n                Switch now and save £{ topTariff.annualSaving.toFixed(0) }\n              </OutlineButton>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { EstimateSummary } from './EstimateSummary';\nimport { TopQuoteDetails } from './TopQuoteDetails';\nimport { SwitchUserButton } from './SwitchUserButton';\nimport { useStateValue } from './State';\nimport './SwitchUser.css';\nimport { Redirect } from 'react-router';\n\nexport const SwitchUser = () => {\n  const [{ address, quote }] = useStateValue();\n  if (!quote) {\n    return <Redirect to='/' />;\n  }\n  const topTariff = quote.tariffs[0];\n\n  return (\n    <div className='c-switch-user'>\n      <div className='c-switch-user__top-quote-text'>\n        Your top quote for {address.addressLine1}:\n      </div>\n      <TopQuoteDetails topTariff={topTariff} />\n      <EstimateSummary estimate={quote.estimate} />\n      <SwitchUserButton userId={quote.userId} topTariff={topTariff} />\n    </div>\n  );\n};\n","import React from 'react';\nimport './Input.css';\n\nexport const Input = ({\n  children,\n  className,\n  type = 'text',\n  placeholder,\n  onChange,\n  value\n}) => (\n  <input\n    className={`${(className || '')} c-input`}\n    placeholder={placeholder}\n    type={type}\n    value={value}\n    onChange={(event) => onChange(event.target.value)}>\n    { children }\n  </input>\n);\n","import React, { useState } from 'react';\nimport './Details.css';\nimport { OutlineButton } from './OutlineButton';\nimport { useStateValue } from './State';\nimport { setAddress } from '../store';\nimport { Input } from './Input';\n\nexport const Details = () => {\n  const [{ address }, dispatch] = useStateValue();\n\n  const [detailsState, setDetailsState] = useState({\n    postcode: address.postcode,\n    addressLine1: address.addressLine1\n  });\n\n  const setNewValue = (target, value) => {\n    setDetailsState({\n      ...detailsState,\n      [target]: value\n    });\n  };\n\n  const updateDetails = () => {\n    dispatch(setAddress(detailsState));\n    window.history.back();\n  };\n\n  return <div className='c-details'>\n    <label className='c-details__field'>\n      Postcode\n      <Input className='c-details__input'\n        onChange={(value) => setNewValue('postcode', value)}\n        type='text'\n        value={detailsState.postcode} />\n    </label>\n    <label className='c-details__field'>\n      Address Line 1\n      <Input className='c-details__input'\n        onChange={(value) => setNewValue('addressLine1', value)}\n        type='text'\n        value={detailsState.addressLine1} />\n    </label>\n\n    <div className='c-details__update-btn'>\n      <OutlineButton onClick={updateDetails}>\n        Update details\n      </OutlineButton>\n    </div>\n  </div>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport './App.css';\nimport { TopBar } from './TopBar';\nimport { Transcations } from './Transactions';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { SwitchUser } from './SwitchUser';\nimport { Details } from './Details';\nimport { StateProvider } from './State';\nimport { appReducer, initAppState } from '../store';\n\nexport const App = () =>\n  <StateProvider initialState={initAppState()} reducer={appReducer}>\n    <Router>\n      <div className='c-app'>\n        <TopBar />\n        <div className='c-app__inner'>\n          <Switch>\n            <Route path='/switch'>\n              <SwitchUser />\n            </Route>\n            <Route path='/details'>\n              <Details />\n            </Route>\n            <Route path='/'>\n              <Transcations />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  </StateProvider>;\n"],"sourceRoot":""}