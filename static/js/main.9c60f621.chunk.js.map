{"version":3,"sources":["data/user-details.js","components/TopBar.js","data/fake-transactions.js","config.js","components/LoadingSpinner.js","components/Button.js","components/SwitchUser.js","components/Quote.js","components/Transactions.js","index.js","components/App.js"],"names":["userDetails","address","postcode","addressLine1","bankDetails","accountNumber","sortCode","identity","title","firstName","lastName","email","phoneNumber","dateOfBirth","monthsAtCurrentAddress","TopBar","className","fakeTransactions","date","to","amount","reference","API_VERSION","process","REACT_APP_API_VERSION","BACKEND_URL","ENERGY_BACKEND_URL","ENERGY_QUOTE_BACKEND_URL","ENERGY_SWITCH_BACKEND_URL","LoadingSpinner","children","Button","onClick","postSwitchUser","userId","a","data","tariffId","fetch","headers","body","JSON","stringify","method","result","json","SwitchUser","quoteState","useState","switchState","setSwitchState","isLoading","setIsLoadingState","switchUserClicked","switchResponse","cheapestTariff","tariffs","success","supplierName","annualSaving","getQuote","hasUserAcceptedTermsAndConditions","Quote","setQuoteState","getQuoteClicked","quote","length","TransactionRow","transaction","showQuote","Transcations","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c60f621.chunk.js","sourcesContent":["export const userDetails = {\n  address: {\n    postcode: 'E28EB',\n    addressLine1: '192a Kingsland Road'\n  },\n  bankDetails: {\n    accountNumber: '14457846',\n    sortCode: '40-47-84'\n  },\n  identity: {\n    title: 'Mr',\n    firstName: 'John',\n    lastName: 'Smith',\n    email: 'john.smith@email.co.uk',\n    phoneNumber: '07950450297',\n    dateOfBirth: '1989-05-25',\n    monthsAtCurrentAddress: 50\n  }\n};\n","import React from 'react';\nimport { userDetails } from '../data/user-details';\nimport './TopBar.css';\n\nexport const TopBar = () => {\n  return (\n    <header className='c-top-bar'>\n      <h3>Switchcraft Bank Account</h3>\n      <p>\n        {userDetails.bankDetails.sortCode} {userDetails.bankDetails.accountNumber}\n      </p>\n    </header>\n  );\n};\n","export const fakeTransactions = [\n  {\n    date: 'Today',\n    to: 'Tesco',\n    amount: '3.00'\n  },\n  {\n    date: 'Yesterday',\n    to: 'British Gas',\n    amount: '70.00',\n    reference: 'Gas and Electric'\n  },\n  {\n    date: '18 February',\n    to: 'Jess Smith',\n    amount: '300.00',\n    reference: 'Holiday'\n  },\n  {\n    date: '17 February',\n    to: 'Landlord',\n    amount: '1,000.00',\n    reference: 'House Rent'\n  }\n];\n","export const BASE_BACKEND_URL = process.env.REACT_APP_BASE_BACKEND_URL || 'http://localhost:3000';\n\nexport const API_VERSION = process.env.REACT_APP_API_VERSION || 'v1';\n\nconst BACKEND_URL = `${BASE_BACKEND_URL}/api/${API_VERSION}`;\n\nexport const ENERGY_BACKEND_URL = `${BACKEND_URL}/energy`;\n\nexport const ENERGY_QUOTE_BACKEND_URL = `${ENERGY_BACKEND_URL}/quote`;\n\nexport const ENERGY_SWITCH_BACKEND_URL = `${ENERGY_BACKEND_URL}/switch`;\n","import React from 'react';\n\nexport const LoadingSpinner = ({\n  children\n}) => <div>{\n  children || 'Loading...'\n}</div>;\n","import React from 'react';\nimport './Button.css';\n\nexport const Button = ({\n  onClick,\n  children\n}) => (\n  <button className='c-btn' onClick={onClick}>\n    {children}\n  </button>\n);\n","import React, { useState } from 'react';\nimport { ENERGY_SWITCH_BACKEND_URL } from '../config';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { userDetails } from '../data/user-details';\nimport './SwitchUser.css'\nimport { Button } from './Button';\n\nconst postSwitchUser = async (userId) => {\n  const data = {\n    userId,\n    tariffId: '1a47e5b80cdbd80006c542a1',\n    ...userDetails.identity,\n    bankDetails: userDetails.bankDetails\n  };\n  const result = (await fetch(ENERGY_SWITCH_BACKEND_URL, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n    method: 'POST'\n  })).json();\n  return result;\n};\n\nexport const SwitchUser = ({\n  quoteState\n}) => {\n  const [switchState, setSwitchState] = useState(null);\n  const [isLoading, setIsLoadingState] = useState(false);\n\n  const switchUserClicked = async () => {\n    setIsLoadingState(true);\n    const switchResponse = await postSwitchUser(quoteState.userId);\n    setSwitchState(switchResponse);\n    setIsLoadingState(false);\n  };\n\n  const cheapestTariff = quoteState.tariffs[0];\n\n  return (\n    isLoading\n      ? <LoadingSpinner>Switching your energy...</LoadingSpinner>\n      : (\n        switchState\n      )\n        ? (\n          <div className='c-switch-user__result'>\n            {\n              switchState.success\n                ? 'Switch successful'\n                : 'Failed to switch'\n            }\n          </div>\n        )\n        : (\n          <Button onClick={switchUserClicked}>\n            Click here to switch to { cheapestTariff.supplierName } and save\n            <br />\n            <span className='c-switch-user__savings'>\n              Â£{ cheapestTariff.annualSaving }\n            </span>\n          </Button>\n        )\n  );\n};\n","import React, { useState } from 'react';\nimport { ENERGY_QUOTE_BACKEND_URL } from '../config';\nimport { SwitchUser } from './SwitchUser';\nimport { LoadingSpinner } from './LoadingSpinner';\nimport { userDetails } from '../data/user-details';\nimport './Quote.css';\nimport { Button } from './Button';\n\nconst getQuote = async () => {\n  const data = {\n    hasUserAcceptedTermsAndConditions: true,\n    address: userDetails.address\n  };\n  const result = (await fetch(ENERGY_QUOTE_BACKEND_URL, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data),\n    method: 'POST'\n  })).json();\n  return result;\n};\n\nexport const Quote = () => {\n  const [quoteState, setQuoteState] = useState(null);\n  const [isLoading, setIsLoadingState] = useState(false);\n\n  const getQuoteClicked = async () => {\n    setIsLoadingState(true);\n    const quote = await getQuote();\n    setQuoteState(quote);\n    setIsLoadingState(false);\n  };\n\n  return (\n    <div className='c-quote'>\n      {\n        isLoading\n          ? <LoadingSpinner>Getting your quote...</LoadingSpinner>\n          : (\n            quoteState && quoteState.tariffs && quoteState.tariffs.length > 0\n          )\n            ? <SwitchUser quoteState={quoteState} />\n            : (\n              <Button onClick={getQuoteClicked}>\n                <span className='c-quote__save-more'>Want to save money on your energy?</span>\n                <br />\n                Click here to find out how much you could save\n              </Button>\n            )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport './Transactions.css';\nimport { fakeTransactions } from '../data/fake-transactions';\nimport { Quote } from './Quote';\n\nconst TransactionRow = ({\n  transaction,\n  showQuote\n}) => (\n  <div className='c-transaction-row'>\n    <div className='c-transaction-row__date'>{ transaction.date }</div>\n    <div className='c-transaction-row__inner'>\n      <div>\n        <p className='c-transaction-row__to'>{ transaction.to }</p>\n        {\n          transaction.reference &&\n          <p className='c-transaction-row__reference'>\n            { transaction.reference }\n          </p>\n        }\n      </div>\n      <div>\n        <p className='c-transaction-row__amount'>Â£{ transaction.amount }</p>\n      </div>\n    </div>\n    {\n      showQuote && <Quote />\n    }\n  </div>\n);\n\nexport const Transcations = () => (\n  <div className='c-transactions'>\n    { fakeTransactions.map(\n      (transaction, index) =>\n        <TransactionRow key={index}\n          transaction={transaction}\n          showQuote={index === 1 } />\n    ) }\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\nimport './App.css';\nimport { TopBar } from './TopBar';\nimport { Transcations } from './Transactions';\n\nexport const App = () => {\n  return (\n    <div className='c-app'>\n      <TopBar />\n      <div className='c-app__inner'>\n        <Transcations />\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}